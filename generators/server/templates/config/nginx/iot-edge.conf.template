map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

upstream nodered {
  server nodered:1880;
}

upstream grafana {
  server grafana:3000;
}

upstream graphite {
  server graphite:80;
}

upstream authServer {
  server edge:9003;
}

upstream edge {
  server edge:9002;
}

server {
  listen 80;
  root /mnt/;
  set $user "-";
  set $username "noauth";
  set $role "Viewer";
  set $github_docs "https://iot-edge.github.io";
  absolute_redirect off;
  rewrite ^/$ /SITE_ID/docs/ redirect;
  rewrite ^/replace_with_site_id/(.*) /SITE_ID/$1 redirect;

  # All edge services go through the Auth server, using
  # Grafana for user/group management and request authorization 
  location /auth {
    internal;
    proxy_set_header X-Original-URI $request_uri;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_pass http://authServer/auth;
  }

  # Redirect to login if not authenticated
  location @error401 {
    add_header Set-Cookie "redirect_to=$scheme://$http_host$request_uri;Path=/SITE_ID/;HttpOnly";
    return 302 $scheme://$http_host/SITE_ID/login;
  }

  # Graphite direct
  location /SITE_ID/graphite/ {

    auth_request /auth;
    error_page 401 = @error401;
    auth_request_set $user $upstream_http_x_webauth_user;
    auth_request_set $username $upstream_http_x_webauth_username;
    auth_request_set $role $upstream_http_x_webauth_role;
    proxy_set_header X-WEBAUTH-USER $user;
    proxy_set_header X-WEBAUTH-USERNAME $username;
    proxy_set_header X-WEBAUTH-ROLE $role;

    proxy_pass http://graphite;
  }

  # Node Red direct
  location /SITE_ID/node-red/ {

    auth_request /auth;
    error_page 401 = @error401;
    auth_request_set $user $upstream_http_x_webauth_user;
    auth_request_set $username $upstream_http_x_webauth_username;
    auth_request_set $role $upstream_http_x_webauth_role;
    proxy_set_header X-WEBAUTH-USER $user;
    proxy_set_header X-WEBAUTH-USERNAME $username;
    proxy_set_header X-WEBAUTH-ROLE $role;
    
    proxy_pass http://nodered;
 
    # This is for web sockets
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }

  # Node Red HTTP API node
  location /SITE_ID/api/plugin/ {

    auth_request /auth;
    error_page 401 = @error401;
    auth_request_set $user $upstream_http_x_webauth_user;
    auth_request_set $username $upstream_http_x_webauth_username;
    auth_request_set $role $upstream_http_x_webauth_role;
    proxy_set_header X-WEBAUTH-USER $user;
    proxy_set_header X-WEBAUTH-USERNAME $username;
    proxy_set_header X-WEBAUTH-ROLE $role;

    proxy_pass http://nodered;
  }

  # Documentation pages
  location /docs/ {

    auth_request /auth;
    error_page 401 = @error401;
    auth_request_set $user $upstream_http_x_webauth_user;
    auth_request_set $username $upstream_http_x_webauth_username;
    auth_request_set $role $upstream_http_x_webauth_role;
    proxy_set_header X-WEBAUTH-USER $user;
    proxy_set_header X-WEBAUTH-USERNAME $username;
    proxy_set_header X-WEBAUTH-ROLE $role;

  }
  # Proxied open source documentation
  location /SITE_ID/docs/guides/ {
    rewrite    /SITE_ID/docs/guides/(.*) /iot-edge-docs/guides/$1 break;
    proxy_pass $github_docs;
  }
  location /SITE_ID/docs/features.md {
    rewrite    /SITE_ID/docs/features.md /iot-edge-docs/features.md break;
    proxy_pass $github_docs;
  }

  # Edge server API {host}/{siteId}/edge/resource...
  location /SITE_ID/edge/ {

    auth_request /auth;
    error_page 401 = @error401;
    auth_request_set $user $upstream_http_x_webauth_user;
    auth_request_set $username $upstream_http_x_webauth_username;
    auth_request_set $role $upstream_http_x_webauth_role;
    proxy_set_header X-WEBAUTH-USER $user;
    proxy_set_header X-WEBAUTH-USERNAME $username;
    proxy_set_header X-WEBAUTH-ROLE $role;

    rewrite ^/SITE_ID/edge(.*)$ $1 break;
    proxy_pass http://edge;

    # This is for web sockets
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }

  # Remove /SITE_ID from grafana urls
  location /SITE_ID/ {
    rewrite ^/SITE_ID(.*)$ $1;
  }
 
  # Default to grafana
  location / {

    auth_request /auth;
    error_page 401 = @error401;
    auth_request_set $user $upstream_http_x_webauth_user;
    auth_request_set $username $upstream_http_x_webauth_username;
    auth_request_set $role $upstream_http_x_webauth_role;
    proxy_set_header X-WEBAUTH-USER $user;
    proxy_set_header X-WEBAUTH-USERNAME $username;
    proxy_set_header X-WEBAUTH-ROLE $role;

    proxy_pass http://grafana;
    proxy_intercept_errors on;
  }

}